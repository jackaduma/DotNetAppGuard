package mk.DotNetApp.Core.CIL;

import java.util.HashMap;
import java.util.Map;

/**
 * @author kun_ma
 *
 */
public class OpCodeNames {

//	static String [] names;
	
	public static Map<Integer, String> names= new HashMap<Integer, String>();
	static{
		names.put(0, "nop");
		names.put(1, "break");
		names.put(2, "ldarg.0");
		names.put(3, "ldarg.1");
		names.put(4, "ldarg.2");
		names.put(5, "ldarg.3");
		names.put(6, "ldloc.0");
		names.put(7, "ldloc.1");
		names.put(8, "ldloc.2");
		names.put(9, "ldloc.3");
		names.put(10, "stloc.0");
		names.put(11, "stloc.1");
		names.put(12, "stloc.2");
		names.put(13, "stloc.3");
		names.put(14, "ldarg.s");
		names.put(15, "ldarga.s");
		names.put(16, "starg.s");
		names.put(17, "ldloc.s");
		names.put(18, "ldloca.s");
		names.put(19, "stloc.s");
		names.put(20, "ldnull");
		names.put(21, "ldc.i4.m1");
		names.put(22, "ldc.i4.0");
		names.put(23, "ldc.i4.1");
		names.put(24, "ldc.i4.2");
		names.put(25, "ldc.i4.3");
		names.put(26, "ldc.i4.4");
		names.put(27, "ldc.i4.5");
		names.put(28, "ldc.i4.6");
		names.put(29, "ldc.i4.7");
		names.put(30, "ldc.i4.8");
		names.put(31, "ldc.i4.s");
		names.put(32, "ldc.i4");
		names.put(33, "ldc.i8");
		names.put(34, "ldc.r4");
		names.put(35, "ldc.r8");
		names.put(36, "dup");
		names.put(37, "pop");
		names.put(38, "jmp");
		names.put(39, "call");
		names.put(40, "calli");
		names.put(41, "ret");
		names.put(42, "br.s");
		names.put(43, "brfalse.s");
		names.put(44, "brtrue.s");
		names.put(45, "beq.s");
		names.put(46, "bge.s");
		names.put(47, "bgt.s");
		names.put(48, "ble.s");
		names.put(49, "blt.s");
		names.put(50, "bne.un.s");
		names.put(51, "bge.un.s");
		names.put(52, "bgt.un.s");
		names.put(53, "ble.un.s");
		names.put(54, "blt.un.s");
		names.put(55, "br");
		names.put(56, "brfalse");
		names.put(57, "brtrue");
		names.put(58, "beq");
		names.put(59, "bge");
		names.put(60, "bgt");
		names.put(61, "ble");
		names.put(62, "blt");
		names.put(63, "bne.un");
		names.put(64, "bge.un");
		names.put(65, "bgt.un");
		names.put(66, "ble.un");
		names.put(67, "blt.un");
		names.put(68, "switch");
		names.put(69, "ldind.i1");
		names.put(70, "ldind.u1");
		names.put(71, "ldind.i2");
		names.put(72, "ldind.u2");
		names.put(73, "ldind.i4");
		names.put(74, "ldind.u4");
		names.put(75, "ldind.i8");
		names.put(76, "ldind.i");
		names.put(77, "ldind.r4");
		names.put(78, "ldind.r8");
		names.put(79, "ldind.ref");
		names.put(80, "stind.ref");
		names.put(81, "stind.i1");
		names.put(82, "stind.i2");
		names.put(83, "stind.i4");
		names.put(84, "stind.i8");
		names.put(85, "stind.r4");
		names.put(86, "stind.r8");
		names.put(87, "add");
		names.put(88, "sub");
		names.put(89, "mul");
		names.put(90, "div");
		names.put(91, "div.un");
		names.put(92, "rem");
		names.put(93, "rem.un");
		names.put(94, "and");
		names.put(95, "or");
		names.put(96, "xor");
		names.put(97, "shl");
		names.put(98, "shr");
		names.put(99, "shr.un");
		names.put(100, "neg");
		names.put(101, "not");
		names.put(102, "conv.i1");
		names.put(103, "conv.i2");
		names.put(104, "conv.i4");
		names.put(105, "conv.i8");
		names.put(106, "conv.r4");
		names.put(107, "conv.r8");
		names.put(108, "conv.u4");
		names.put(109, "conv.u8");
		names.put(110, "callvirt");
		names.put(111, "cpobj");
		names.put(112, "ldobj");
		names.put(113, "ldstr");
		names.put(114, "newobj");
		names.put(115, "castclass");
		names.put(116, "isinst");
		names.put(117, "conv.r.un");
		names.put(118, "unbox");
		names.put(119, "throw");
		names.put(120, "ldfld");
		names.put(121, "ldflda");
		names.put(122, "stfld");
		names.put(123, "ldsfld");
		names.put(124, "ldsflda");
		names.put(125, "stsfld");
		names.put(126, "stobj");
		names.put(127, "conv.ovf.i1.un");
		names.put(128, "conv.ovf.i2.un");
		names.put(129, "conv.ovf.i4.un");
		names.put(130, "conv.ovf.i8.un");
		names.put(131, "conv.ovf.u1.un");
		names.put(132, "conv.ovf.u2.un");
		names.put(133, "conv.ovf.u4.un");
		names.put(134, "conv.ovf.u8.un");
		names.put(135, "conv.ovf.i.un");
		names.put(136, "conv.ovf.u.un");
		names.put(137, "box");
		names.put(138, "newarr");
		names.put(139, "ldlen");
		names.put(140, "ldelema");
		names.put(141, "ldelem.i1");
		names.put(142, "ldelem.u1");
		names.put(143, "ldelem.i2");
		names.put(144, "ldelem.u2");
		names.put(145, "ldelem.i4");
		names.put(146, "ldelem.u4");
		names.put(147, "ldelem.i8");
		names.put(148, "ldelem.i");
		names.put(149, "ldelem.r4");
		names.put(150, "ldelem.r8");
		names.put(151, "ldelem.ref");
		names.put(152, "stelem.i");
		names.put(153, "stelem.i1");
		names.put(154, "stelem.i2");
		names.put(155, "stelem.i4");
		names.put(156, "stelem.i8");
		names.put(157, "stelem.r4");
		names.put(158, "stelem.r8");
		names.put(159, "stelem.ref");
		names.put(160, "ldelem.any");
		names.put(161, "stelem.any");
		names.put(162, "unbox.any");
		names.put(163, "conv.ovf.i1");
		names.put(164, "conv.ovf.u1");
		names.put(165, "conv.ovf.i2");
		names.put(166, "conv.ovf.u2");
		names.put(167, "conv.ovf.i4");
		names.put(168, "conv.ovf.u4");
		names.put(169, "conv.ovf.i8");
		names.put(170, "conv.ovf.u8");
		names.put(171, "refanyval");
		names.put(172, "ckfinite");
		names.put(173, "mkrefany");
		names.put(174, "ldtoken");
		names.put(175, "conv.u2");
		names.put(176, "conv.u1");
		names.put(177, "conv.i");
		names.put(178, "conv.ovf.i");
		names.put(179, "conv.ovf.u");
		names.put(180, "add.ovf");
		names.put(181, "add.ovf.un");
		names.put(182, "mul.ovf");
		names.put(183, "mul.ovf.un");
		names.put(184, "sub.ovf");
		names.put(185, "sub.ovf.un");
		names.put(186, "endfinally");
		names.put(187, "leave");
		names.put(188, "leave.s");
		names.put(189, "stind.i");
		names.put(190, "conv.u");
		names.put(191, "arglist");
		names.put(192, "ceq");
		names.put(193, "cgt");
		names.put(194, "cgt.un");
		names.put(195, "clt");
		names.put(196, "clt.un");
		names.put(197, "ldftn");
		names.put(198, "ldvirtftn");
		names.put(199, "ldarg");
		names.put(200, "ldarga");
		names.put(201, "starg");
		names.put(202, "ldloc");
		names.put(203, "ldloca");
		names.put(204, "stloc");
		names.put(205, "localloc");
		names.put(206, "endfilter");
		names.put(207, "unaligned.");
		names.put(208, "volatile.");
		names.put(209, "tail.");
		names.put(210, "initobj");
		names.put(211, "constrained.");
		names.put(212, "cpblk");
		names.put(213, "initblk");
		names.put(214, "no.");
		names.put(215, "rethrow");
		names.put(216, "sizeof");
		names.put(217, "refanytype");
		names.put(218, "readonly.");
	};

	public OpCodeNames ()
	{
		byte[] table = new byte [] {
			3, 110, 111, 112,
			5, 98, 114, 101, 97, 107,
			7, 108, 100, 97, 114, 103, 46, 48,
			7, 108, 100, 97, 114, 103, 46, 49,
			7, 108, 100, 97, 114, 103, 46, 50,
			7, 108, 100, 97, 114, 103, 46, 51,
			7, 108, 100, 108, 111, 99, 46, 48,
			7, 108, 100, 108, 111, 99, 46, 49,
			7, 108, 100, 108, 111, 99, 46, 50,
			7, 108, 100, 108, 111, 99, 46, 51,
			7, 115, 116, 108, 111, 99, 46, 48,
			7, 115, 116, 108, 111, 99, 46, 49,
			7, 115, 116, 108, 111, 99, 46, 50,
			7, 115, 116, 108, 111, 99, 46, 51,
			7, 108, 100, 97, 114, 103, 46, 115,
			8, 108, 100, 97, 114, 103, 97, 46, 115,
			7, 115, 116, 97, 114, 103, 46, 115,
			7, 108, 100, 108, 111, 99, 46, 115,
			8, 108, 100, 108, 111, 99, 97, 46, 115,
			7, 115, 116, 108, 111, 99, 46, 115,
			6, 108, 100, 110, 117, 108, 108,
			9, 108, 100, 99, 46, 105, 52, 46, 109, 49,
			8, 108, 100, 99, 46, 105, 52, 46, 48,
			8, 108, 100, 99, 46, 105, 52, 46, 49,
			8, 108, 100, 99, 46, 105, 52, 46, 50,
			8, 108, 100, 99, 46, 105, 52, 46, 51,
			8, 108, 100, 99, 46, 105, 52, 46, 52,
			8, 108, 100, 99, 46, 105, 52, 46, 53,
			8, 108, 100, 99, 46, 105, 52, 46, 54,
			8, 108, 100, 99, 46, 105, 52, 46, 55,
			8, 108, 100, 99, 46, 105, 52, 46, 56,
			8, 108, 100, 99, 46, 105, 52, 46, 115,
			6, 108, 100, 99, 46, 105, 52,
			6, 108, 100, 99, 46, 105, 56,
			6, 108, 100, 99, 46, 114, 52,
			6, 108, 100, 99, 46, 114, 56,
			3, 100, 117, 112,
			3, 112, 111, 112,
			3, 106, 109, 112,
			4, 99, 97, 108, 108,
			5, 99, 97, 108, 108, 105,
			3, 114, 101, 116,
			4, 98, 114, 46, 115,
			9, 98, 114, 102, 97, 108, 115, 101, 46, 115,
			8, 98, 114, 116, 114, 117, 101, 46, 115,
			5, 98, 101, 113, 46, 115,
			5, 98, 103, 101, 46, 115,
			5, 98, 103, 116, 46, 115,
			5, 98, 108, 101, 46, 115,
			5, 98, 108, 116, 46, 115,
			8, 98, 110, 101, 46, 117, 110, 46, 115,
			8, 98, 103, 101, 46, 117, 110, 46, 115,
			8, 98, 103, 116, 46, 117, 110, 46, 115,
			8, 98, 108, 101, 46, 117, 110, 46, 115,
			8, 98, 108, 116, 46, 117, 110, 46, 115,
			2, 98, 114,
			7, 98, 114, 102, 97, 108, 115, 101,
			6, 98, 114, 116, 114, 117, 101,
			3, 98, 101, 113,
			3, 98, 103, 101,
			3, 98, 103, 116,
			3, 98, 108, 101,
			3, 98, 108, 116,
			6, 98, 110, 101, 46, 117, 110,
			6, 98, 103, 101, 46, 117, 110,
			6, 98, 103, 116, 46, 117, 110,
			6, 98, 108, 101, 46, 117, 110,
			6, 98, 108, 116, 46, 117, 110,
			6, 115, 119, 105, 116, 99, 104,
			8, 108, 100, 105, 110, 100, 46, 105, 49,
			8, 108, 100, 105, 110, 100, 46, 117, 49,
			8, 108, 100, 105, 110, 100, 46, 105, 50,
			8, 108, 100, 105, 110, 100, 46, 117, 50,
			8, 108, 100, 105, 110, 100, 46, 105, 52,
			8, 108, 100, 105, 110, 100, 46, 117, 52,
			8, 108, 100, 105, 110, 100, 46, 105, 56,
			7, 108, 100, 105, 110, 100, 46, 105,
			8, 108, 100, 105, 110, 100, 46, 114, 52,
			8, 108, 100, 105, 110, 100, 46, 114, 56,
			9, 108, 100, 105, 110, 100, 46, 114, 101, 102,
			9, 115, 116, 105, 110, 100, 46, 114, 101, 102,
			8, 115, 116, 105, 110, 100, 46, 105, 49,
			8, 115, 116, 105, 110, 100, 46, 105, 50,
			8, 115, 116, 105, 110, 100, 46, 105, 52,
			8, 115, 116, 105, 110, 100, 46, 105, 56,
			8, 115, 116, 105, 110, 100, 46, 114, 52,
			8, 115, 116, 105, 110, 100, 46, 114, 56,
			3, 97, 100, 100,
			3, 115, 117, 98,
			3, 109, 117, 108,
			3, 100, 105, 118,
			6, 100, 105, 118, 46, 117, 110,
			3, 114, 101, 109,
			6, 114, 101, 109, 46, 117, 110,
			3, 97, 110, 100,
			2, 111, 114,
			3, 120, 111, 114,
			3, 115, 104, 108,
			3, 115, 104, 114,
			6, 115, 104, 114, 46, 117, 110,
			3, 110, 101, 103,
			3, 110, 111, 116,
			7, 99, 111, 110, 118, 46, 105, 49,
			7, 99, 111, 110, 118, 46, 105, 50,
			7, 99, 111, 110, 118, 46, 105, 52,
			7, 99, 111, 110, 118, 46, 105, 56,
			7, 99, 111, 110, 118, 46, 114, 52,
			7, 99, 111, 110, 118, 46, 114, 56,
			7, 99, 111, 110, 118, 46, 117, 52,
			7, 99, 111, 110, 118, 46, 117, 56,
			8, 99, 97, 108, 108, 118, 105, 114, 116,
			5, 99, 112, 111, 98, 106,
			5, 108, 100, 111, 98, 106,
			5, 108, 100, 115, 116, 114,
			6, 110, 101, 119, 111, 98, 106,
			9, 99, 97, 115, 116, 99, 108, 97, 115, 115,
			6, 105, 115, 105, 110, 115, 116,
			9, 99, 111, 110, 118, 46, 114, 46, 117, 110,
			5, 117, 110, 98, 111, 120,
			5, 116, 104, 114, 111, 119,
			5, 108, 100, 102, 108, 100,
			6, 108, 100, 102, 108, 100, 97,
			5, 115, 116, 102, 108, 100,
			6, 108, 100, 115, 102, 108, 100,
			7, 108, 100, 115, 102, 108, 100, 97,
			6, 115, 116, 115, 102, 108, 100,
			5, 115, 116, 111, 98, 106,
			14, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105, 49, 46, 117, 110,
			14, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105, 50, 46, 117, 110,
			14, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105, 52, 46, 117, 110,
			14, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105, 56, 46, 117, 110,
			14, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117, 49, 46, 117, 110,
			14, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117, 50, 46, 117, 110,
			14, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117, 52, 46, 117, 110,
			14, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117, 56, 46, 117, 110,
			13, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105, 46, 117, 110,
			13, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117, 46, 117, 110,
			3, 98, 111, 120,
			6, 110, 101, 119, 97, 114, 114,
			5, 108, 100, 108, 101, 110,
			7, 108, 100, 101, 108, 101, 109, 97,
			9, 108, 100, 101, 108, 101, 109, 46, 105, 49,
			9, 108, 100, 101, 108, 101, 109, 46, 117, 49,
			9, 108, 100, 101, 108, 101, 109, 46, 105, 50,
			9, 108, 100, 101, 108, 101, 109, 46, 117, 50,
			9, 108, 100, 101, 108, 101, 109, 46, 105, 52,
			9, 108, 100, 101, 108, 101, 109, 46, 117, 52,
			9, 108, 100, 101, 108, 101, 109, 46, 105, 56,
			8, 108, 100, 101, 108, 101, 109, 46, 105,
			9, 108, 100, 101, 108, 101, 109, 46, 114, 52,
			9, 108, 100, 101, 108, 101, 109, 46, 114, 56,
			10, 108, 100, 101, 108, 101, 109, 46, 114, 101, 102,
			8, 115, 116, 101, 108, 101, 109, 46, 105,
			9, 115, 116, 101, 108, 101, 109, 46, 105, 49,
			9, 115, 116, 101, 108, 101, 109, 46, 105, 50,
			9, 115, 116, 101, 108, 101, 109, 46, 105, 52,
			9, 115, 116, 101, 108, 101, 109, 46, 105, 56,
			9, 115, 116, 101, 108, 101, 109, 46, 114, 52,
			9, 115, 116, 101, 108, 101, 109, 46, 114, 56,
			10, 115, 116, 101, 108, 101, 109, 46, 114, 101, 102,
			10, 108, 100, 101, 108, 101, 109, 46, 97, 110, 121,
			10, 115, 116, 101, 108, 101, 109, 46, 97, 110, 121,
			9, 117, 110, 98, 111, 120, 46, 97, 110, 121,
			11, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105, 49,
			11, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117, 49,
			11, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105, 50,
			11, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117, 50,
			11, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105, 52,
			11, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117, 52,
			11, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105, 56,
			11, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117, 56,
			9, 114, 101, 102, 97, 110, 121, 118, 97, 108,
			8, 99, 107, 102, 105, 110, 105, 116, 101,
			8, 109, 107, 114, 101, 102, 97, 110, 121,
			7, 108, 100, 116, 111, 107, 101, 110,
			7, 99, 111, 110, 118, 46, 117, 50,
			7, 99, 111, 110, 118, 46, 117, 49,
			6, 99, 111, 110, 118, 46, 105,
			10, 99, 111, 110, 118, 46, 111, 118, 102, 46, 105,
			10, 99, 111, 110, 118, 46, 111, 118, 102, 46, 117,
			7, 97, 100, 100, 46, 111, 118, 102,
			10, 97, 100, 100, 46, 111, 118, 102, 46, 117, 110,
			7, 109, 117, 108, 46, 111, 118, 102,
			10, 109, 117, 108, 46, 111, 118, 102, 46, 117, 110,
			7, 115, 117, 98, 46, 111, 118, 102,
			10, 115, 117, 98, 46, 111, 118, 102, 46, 117, 110,
			10, 101, 110, 100, 102, 105, 110, 97, 108, 108, 121,
			5, 108, 101, 97, 118, 101,
			7, 108, 101, 97, 118, 101, 46, 115,
			7, 115, 116, 105, 110, 100, 46, 105,
			6, 99, 111, 110, 118, 46, 117,
			7, 97, 114, 103, 108, 105, 115, 116,
			3, 99, 101, 113,
			3, 99, 103, 116,
			6, 99, 103, 116, 46, 117, 110,
			3, 99, 108, 116,
			6, 99, 108, 116, 46, 117, 110,
			5, 108, 100, 102, 116, 110,
			9, 108, 100, 118, 105, 114, 116, 102, 116, 110,
			5, 108, 100, 97, 114, 103,
			6, 108, 100, 97, 114, 103, 97,
			5, 115, 116, 97, 114, 103,
			5, 108, 100, 108, 111, 99,
			6, 108, 100, 108, 111, 99, 97,
			5, 115, 116, 108, 111, 99,
			8, 108, 111, 99, 97, 108, 108, 111, 99,
			9, 101, 110, 100, 102, 105, 108, 116, 101, 114,
			10, 117, 110, 97, 108, 105, 103, 110, 101, 100, 46,
			9, 118, 111, 108, 97, 116, 105, 108, 101, 46,
			5, 116, 97, 105, 108, 46,
			7, 105, 110, 105, 116, 111, 98, 106,
			12, 99, 111, 110, 115, 116, 114, 97, 105, 110, 101, 100, 46,
			5, 99, 112, 98, 108, 107,
			7, 105, 110, 105, 116, 98, 108, 107,
			3, 110, 111, 46,
			7, 114, 101, 116, 104, 114, 111, 119,
			6, 115, 105, 122, 101, 111, 102,
			10, 114, 101, 102, 97, 110, 121, 116, 121, 112, 101,
			9, 114, 101, 97, 100, 111, 110, 108, 121, 46,
		};

//		names = new String [219];

//		for (int i = 0, p = 0; i < names.length; i++) {
//			char[] buffer = new char [table [p++]];
//
//			for (int j = 0; j < buffer.length; j++)
//				buffer [j] = (char) table [p++];
//
//			String name = new String (buffer);
//			names [i] = name;
//			System.out.println("names.put("+i+", \""+name+"\");");
//		}
	}
}
